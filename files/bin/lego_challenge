#!/usr/bin/env bash

###
## if no domain is specified, skip whole lego challenge process
###

if [ -z ${LEGO_CERT_DOMAIN+x} ] || [ -z "${LEGO_CERT_DOMAIN}" ]; then
    return
fi


###
## prepare LEGO command arguments
###

legoArgs=('--accept-tos')
legoArgs+=('--path' "${LEGO_PATH}")
legoArgs+=('--email' "${LEGO_ACCOUNT_EMAIL}")
legoArgs+=('--dns' "${LEGO_DNS_PROVIDER}")

if [ ! -z ${1+x} ] && [ "$( echo "${1}" | tr '[:upper:]' '[:lower:]' )" = "test" ]; then
    # add Let's Encrypt staging server for test purpose
    legoArgs+=('--server' 'https://acme-staging-v02.api.letsencrypt.org/directory')
fi

# use DNS resolvers defined ...
# if empty string don't add argument and use LEGO defaults:
# Docker host default and Google DNS as fallback
if [ ! -z "${LEGO_DNS_RESOLVERS}" ]; then
    legoArgs+=('--dns.resolvers' "${LEGO_DNS_RESOLVERS}")
fi

snis="$( echo "${LEGO_CERT_DOMAIN}" | jq -r '.[]' )"
if [ "$?" -eq 0 ]; then
    for domain in ${snis}; do
        legoArgs+=('--domains' "${domain}")
    done
else
    legoArgs+=('--domains' "${LEGO_CERT_DOMAIN}")
fi


###
## run LEGO command
###

lego "${legoArgs[@]}" run
