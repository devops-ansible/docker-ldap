#!/usr/bin/env bash

# kill script when error occurs
set -e

ENTRYPOINT_PATH=${BASH_SOURCE[0]}
{# ## not needed due to container structure
# if and while ${ENTRYPOINT_PATH} is a symlink resolve that link to source
while [ -h "${ENTRYPOINT_PATH}" ]; do
    PARENT_DIR=$( cd -P "$( dirname "${ENTRYPOINT_PATH}" )" >/dev/null 2>&1 && pwd )
    ENTRYPOINT_PATH=$( readlink "${ENTRYPOINT_PATH}" )
    # relative symlinks need to be resolved relative to current path
    [[ ${ENTRYPOINT_PATH} != /* ]] && ENTRYPOINT_PATH="${PARENT_DIR}/${ENTRYPOINT_PATH}"
done
#}
export ENTRYPOINT_PATH

ulimit -n ${LDAP_ULIMIT}
export EP_PID=$$
export ep_lockfile="/entrypoint.lock"
export TLS_LDIF_FILE="/tmp/tls.ldif"

{% if BUILD_ARG_TESTING in [ "yes", "true" ] -%}
# generate a random string that is meant to be used as test ident
export TESTING_IDENT="$( openssl rand -hex 3 )"

# if starting with test mode, run testing
if [ "${1}" == "test" ]; then

    export PATH="${PATH}:${TESTS_PATH}/bats/bin/"
    cd "${TESTS_PATH}"
    bats ./test.bats

# in any other case do regular startup
else

    {% filter indent( width=4 ) %}{% include J2T_PATH ~ "_regular_entry.j2" %}{% endfilter %}
fi
{% else %}{% include J2T_PATH ~ "_regular_entry.j2" %}{% endif %}
